# Base image
FROM golang:1.20 as builder

# Set working directory
WORKDIR /app

# Copy go.mod and go.sum files for dependency caching
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy the rest of the application code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -o main .

# Create a minimal runtime image
FROM alpine:latest

# Set working directory in runtime image
WORKDIR /root/

# Copy the binary from the builder stage
COPY --from=builder /app/main .

# Copy environment files (if necessary)
COPY .env .

# Expose the application port (optional, if the app uses a specific port)
# EXPOSE 8080

# Command to run the application
CMD ["./main"]
